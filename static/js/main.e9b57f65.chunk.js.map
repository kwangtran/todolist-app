{"version":3,"sources":["components/Title.js","components/Search.js","components/Sort.js","components/Control.js","components/Form.js","components/Item.js","components/List.js","mocks/task.js","App.js","serviceWorker.js","index.js"],"names":["Title","react_default","a","createElement","className","Component","Search","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","strSeach","handleSearch","bind","assertThisInitialized","handleClear","event","setState","target","value","onClickGo","_this2","name","onChange","handleTextChangeOnSearch","type","placeholder","onClick","Sort","orderBy","orderDir","onClickSort","_this$props","strSort","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","handleSort","role","Control","handleAdd","onClickAdd","elmButton","isShowForm","Search_Search","onClickSearchGo","Sort_Sort","Form","require","task_id","task_Name","task_Level","handleCancel","console","log","itemSelected","item","updateItem","nextProps","level","onClickCancel","defineProperty","preventDefault","onSubmit","handleSubmit","handleChange","required","Item","handleEdit","onClickEdit","handleDelete","onClickDelete","elmLevel","index","showLevelElement","List","elmItem","items","map","Item_Item","key","style","width","uuidv4","App","reject","push","localStorage","setItem","JSON","stringify","strSearch","handleToggle","closeForm","remove","getItem","tasks","parse","elmForm","itemOrigins","toConsumableArray","_this$state","filter","includes","toLowerCase","funcOrderBy","Form_Form","Title_Title","Control_Control","List_List","Boolean","window","location","hostname","match","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e9b57f65.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Title extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* TITLE : START */}\r\n                <div className=\"page-header\">\r\n                    <h1>Project 01 - ToDo List <small>ReactJS</small></h1>\r\n                </div>\r\n                {/* TITLE : END */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Search extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         strSeach: ''\r\n      };\r\n      this.handleSearch = this.handleSearch.bind(this);\r\n      this.handleClear = this.handleClear.bind(this);\r\n   }\r\n\r\n   handleTextChangeOnSearch(event) {\r\n      // let name = event.target.name;\r\n      // let value = event.target.value;\r\n      this.setState({\r\n         strSeach: event.target.value\r\n      });\r\n      // console.table(name, value);\r\n   }\r\n   handleSearch() {\r\n      // console.log(this.state.strSeach);\r\n      this.props.onClickGo(this.state.strSeach);\r\n   }\r\n   handleClear() {\r\n      this.setState({\r\n         strSeach: ''\r\n      });\r\n      this.props.onClickGo('');\r\n   }\r\n   render() {\r\n      return (\r\n\r\n         <div className=\"col-xs-4 col-sm-4 col-md-4 col-lg-4\">\r\n            <div className=\"input-group\">\r\n               <input value={this.state.strSeach} name=\"textSearch\" onChange={(event) => this.handleTextChangeOnSearch(event)} type=\"text\" className=\"form-control\" placeholder=\"Search for...\" />\r\n               <span className=\"input-group-btn\">\r\n                  <button onClick={this.handleSearch} className=\"btn btn-info\" type=\"button\">Go!</button>\r\n                  <button onClick={this.handleClear} className=\"btn btn-success\" type=\"button\">Clear</button>\r\n               </span>\r\n            </div>\r\n         </div>\r\n\r\n      )\r\n   }\r\n}\r\n","import React, { Component } from 'react'\r\nexport default class Sort extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    handleSort(orderBy, orderDir) {\r\n        // console.log('handleSort ', orderBy, orderDir);\r\n        this.props.onClickSort(orderBy, orderDir)\r\n    }\r\n    render() {\r\n        let { orderBy, orderDir } = this.props;\r\n        let strSort = orderBy + ' - ' + orderDir;\r\n        return (\r\n            <div className=\"col-xs-3 col-sm-3 col-md-3 col-lg-3\">\r\n                <div className=\"dropdown\">\r\n                    <button className=\"btn btn-default dropdown-toggle\" type=\"button\" id=\"dropdownMenu1\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"true\">\r\n                        Sort by <span className=\"caret\" />\r\n                    </button>\r\n                    <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\r\n                        <li><a onClick={() => this.handleSort('name', 'asc')} role=\"button\">Name ASC</a></li>\r\n                        <li><a onClick={() => this.handleSort('name', 'desc')} role=\"button\">Name DESC</a></li>\r\n                        <li role=\"separator\" className=\"divider\" />\r\n                        <li><a onClick={() => this.handleSort('level', 'asc')} role=\"button\">Level ASC</a></li>\r\n                        <li><a onClick={() => this.handleSort('level', 'desc')} role=\"button\">Level DESC</a></li>\r\n                    </ul>\r\n                    <span className=\"label label-success label-medium\">{strSort}</span>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Search from './Search';\r\nimport Sort from './Sort';\r\n\r\nexport default class Control extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.handleAdd = this.handleAdd.bind(this);\r\n    }\r\n    handleAdd() {\r\n        this.props.onClickAdd();\r\n    }\r\n    render() {\r\n        let { orderBy, orderDir } = this.props;\r\n        let elmButton = <button onClick={this.handleAdd} type=\"button\" className=\"btn btn-info btn-block\">Add Task</button>;\r\n        if (this.props.isShowForm) {\r\n            elmButton = <button onClick={this.handleAdd} type=\"button\" className=\"btn btn-success btn-block\">Close Form</button>\r\n        };\r\n        return (\r\n            <div>\r\n                {/* CONTROL (SEARCH + SORT + ADD) : START */}\r\n                <div className=\"row\">\r\n                    <Search onClickGo={this.props.onClickSearchGo} />\r\n                    <Sort onClickSort={this.props.onClickSort}\r\n                        orderBy={orderBy}\r\n                        orderDir={orderDir}\r\n                    />\r\n                    <div className=\"col-xs-5 col-sm-5 col-md-5 col-lg-5\">\r\n                        {elmButton}\r\n                    </div>\r\n                </div>\r\n                {/* CONTROL (SEARCH + SORT + ADD) : END */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nconst uuidv4 = require('uuid/v4');\r\nexport default class Form extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         task_id: '',\r\n         task_Name: '',\r\n         task_Level: 0\r\n      }\r\n\r\n\r\n      this.handleCancel = this.handleCancel.bind(this);\r\n      console.log(this.props.itemSelected);\r\n      // this.handleLevelChange = this.handleLevelChange.bind(this);\r\n   }\r\n   componentWillMount() {\r\n      let item = this.props.itemSelected;\r\n      this.updateItem(item);\r\n   }\r\n   componentWillReceiveProps(nextProps) {\r\n      let item = nextProps.itemSelected;\r\n      this.updateItem(item);\r\n   }\r\n   updateItem(item) {\r\n      if (item !== null) {\r\n         this.setState({\r\n            task_id: item.id,\r\n            task_Name: item.name,\r\n            task_Level: item.level,\r\n         })\r\n      }\r\n   }\r\n   handleCancel() {\r\n      this.props.onClickCancel();\r\n   }\r\n   // handTextChange = (event) => {\r\n   //    this.setState({\r\n   //       taskName: event.target.value,\r\n   //    })\r\n   // }\r\n   // handleAdd(event) {\r\n   //    console.log('add');\r\n   //    let taskName = this.state.taskName;\r\n   //    let taskLevel = this.state.taskLevel;\r\n   //    console.log('Taskname = ' + taskName);\r\n   //    console.log('TaskLevel = ' + taskLevel);\r\n   // }\r\n   handleChange(event) {\r\n      let target = event.target;\r\n      let value = target.value;\r\n      let name = target.name;\r\n      this.setState({\r\n         [name]: value\r\n      });\r\n   }\r\n   handleSubmit(event) {\r\n      var item = {\r\n         id: this.state.task_id,\r\n         name: this.state.task_Name,\r\n         level: this.state.task_Level\r\n      }\r\n      this.props.onClickAdd(item);\r\n      event.preventDefault();\r\n   }\r\n   // handleLevelChange(event) {\r\n   //    this.setState({\r\n   //       taskLevel: event.target.value\r\n   //    })\r\n   //    console.log(event.target.value);\r\n   // }\r\n   render() {\r\n      return (\r\n         <div>\r\n            {/* FORM : START */}\r\n            <div className=\"row\">\r\n               <div className=\"col-md-offset-7 col-md-5\">\r\n                  {/* <form action method=\"POST\" className=\"form-inline\"> */}\r\n                  <form onSubmit={(event) => this.handleSubmit(event)} className=\"form-inline\">\r\n                     <div className=\"form-group\">\r\n                        <label className=\"sr-only\">label</label>\r\n                        <input value={this.state.task_Name} onChange={(event) => this.handleChange(event)} name=\"task_Name\" type=\"text\" className=\"form-control\" placeholder=\"Task Name\" />\r\n                     </div>\r\n                     <div className=\"form-group\">\r\n                        <label className=\"sr-only\">label</label>\r\n                        <select value={this.state.task_Level} name=\"task_Level\" id=\"inputDs\" className=\"form-control\" required=\"required\" onChange={(event) => this.handleChange(event)}>\r\n                           <option value={0} >Small</option>\r\n                           <option value={1} >Medium</option>\r\n                           <option value={2} >High</option>\r\n                        </select>\r\n                     </div>\r\n                     <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n                     <button onClick={this.handleCancel} type=\"button\" className=\"btn btn-default\">Cancel</button>\r\n                  </form>\r\n               </div>\r\n            </div>\r\n            {/* FORM : END */}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Item extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n    showLevelElement(level) {\r\n        let elmLevel = <span className=\"label label-default\">Small</span>;\r\n        if (level === 1) {\r\n            elmLevel = <span className=\"label label-info\">Medium</span>;\r\n        }\r\n        if (level === 2) {\r\n            elmLevel = <span className=\"label label-danger\">High</span>;\r\n        }\r\n        return elmLevel;\r\n    }\r\n\r\n    handleEdit = (item) => {\r\n        this.props.onClickEdit(item);\r\n        // console.log('test', item)\r\n    }\r\n    handleDelete = (id) => {\r\n        // this.setState({\r\n        //     idItemDelete: id\r\n        // })\r\n        // console.log('idtem xoa = ', id)\r\n        this.props.onClickDelete(id);\r\n    }\r\n    render() {\r\n        const { item } = this.props;\r\n        const { index } = this.props;\r\n        // console.log(item);\r\n\r\n        return (\r\n            <tr>\r\n                <td className=\"text-center\">{index}</td>\r\n                <td>{item.name} - {item.id}</td>\r\n                <td className=\"text-center\">{this.showLevelElement(item.level)}</td>\r\n                <td>\r\n                    <button onClick={() => this.handleEdit(item)} type=\"button\" className=\"btn btn-warning\">Edit</button>\r\n                    <button onClick={() => this.handleDelete(item.id)} type=\"button\" className=\"btn btn-danger\">Delete</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport Item from './Item';\r\n\r\nexport default class List extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n        // console.log(this.props.items)\r\n    }\r\n    // console.log(this.props.items)    \r\n    // console.log(this.props.items)\r\n    render() {\r\n        const items = this.props.items;\r\n        const elmItem = items.map((item, index) => {\r\n            return (\r\n                <Item \r\n                key={index} \r\n                item={item} \r\n                index={index} \r\n                onClickDelete={this.props.onClickDelete} \r\n                onClickEdit = {this.props.onClickEdit}/>\r\n            )\r\n        })\r\n        return (\r\n            <div>\r\n                {/* LIST : START */}\r\n                <div className=\"panel panel-success\">\r\n                    <div className=\"panel-heading\">List Task</div>\r\n                    <table className=\"table table-hover \">\r\n                        <thead>\r\n                            <tr>\r\n                                <th style={{ width: '10%' }} className=\"text-center\">#</th>\r\n                                <th>Task</th>\r\n                                <th style={{ width: '20%' }} className=\"text-center\">Level</th>\r\n                                <th style={{ width: '20%' }}>Action</th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {elmItem}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                {/* LIST : END */}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","const uuidv4 = require('uuid/v4')\r\nlet items = [\r\n    {\r\n        id: uuidv4(),\r\n        name: \"Đi chợ mua rau\",\r\n        level: 0\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        name: \"Học bài\",\r\n        level: 1\r\n    },\r\n    {\r\n        id: uuidv4(),\r\n        name: \"Đá bóng\",\r\n        level: 1\r\n    }\r\n    ,\r\n    {\r\n        id: uuidv4(),\r\n        name: \"Ăn sáng\",\r\n        level: 2\r\n    }\r\n    ,\r\n    {\r\n        id: uuidv4(),\r\n        name: \"Mua thức ăn\",\r\n        level: 1\r\n    }\r\n]\r\nexport default items;","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Title from './components/Title'\r\nimport Control from './components/Control';\r\nimport Form from './components/Form';\r\nimport List from './components/List';\r\nimport tasks from './mocks/task'\r\nimport { filter, includes, orderBy as funcOrderBy, remove, reject } from 'lodash';\r\nconst uuidv4 = require('uuid/v4');\r\nexport default class App extends Component {\r\n   constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n         items: [],\r\n         isShowForm: false,\r\n         strSearch: '',\r\n         orderBy: 'level',\r\n         orderDir: 'asc',\r\n         itemSelected: null\r\n      }\r\n\r\n      this.handleToggle = this.handleToggle.bind(this);\r\n      this.closeForm = this.closeForm.bind(this);\r\n      this.handleSearch = this.handleSearch.bind(this);\r\n      this.handleSort = this.handleSort.bind(this);\r\n   }\r\n   handleToggle() {\r\n      this.setState({\r\n         isShowForm: !this.state.isShowForm,\r\n         itemSelected: null\r\n      });\r\n   }\r\n   closeForm() {\r\n      this.setState({\r\n         isShowForm: false\r\n      });\r\n   }\r\n   handleSearch(value) {\r\n      this.setState({\r\n         strSearch: value\r\n      });\r\n   }\r\n   handleSort(orderBy, orderDir) {\r\n      this.setState({\r\n         orderBy: orderBy,\r\n         orderDir: orderDir\r\n      });\r\n      console.log(orderBy, orderDir, 'ahihihihi')\r\n   }\r\n   handleAdd = (item) => {\r\n      let { items } = this.state;\r\n      let id = null;\r\n      if (item.id !== '') { //Edit\r\n         items = reject(items, { id: item.id })\r\n         id = item.id;\r\n      } else { //add\r\n         id = uuidv4()\r\n      }\r\n      items.push({\r\n         id: id,\r\n         name: item.name,\r\n         level: +item.level\r\n      });\r\n      this.setState({\r\n         items: items\r\n      });\r\n      localStorage.setItem(\"tasks\", JSON.stringify(items));\r\n   }\r\n   handleDelete(id) {\r\n      // console.log('App idItemDelete = ', id);\r\n      let items = this.state.items;\r\n      remove(items, (item) => {\r\n         return item.id === id\r\n      });\r\n\r\n      this.setState({\r\n         items: items\r\n      });\r\n      localStorage.setItem(\"tasks\", JSON.stringify(items));\r\n      // console.log('items = ' + items);\r\n   }\r\n   componentWillMount() {\r\n      if (localStorage.getItem(\"tasks\") == null) {\r\n         localStorage.setItem(\"tasks\", JSON.stringify(tasks));\r\n      }\r\n      let items = JSON.parse(localStorage.getItem(\"tasks\"));\r\n      this.setState({\r\n         items: items\r\n      })\r\n   }\r\n   handleEdit = (item) => {\r\n\r\n      console.log('item = ' + item)\r\n      this.setState({\r\n         isShowForm: true,\r\n         itemSelected: item\r\n      })\r\n   }\r\n   render() {\r\n      // console.log('str = ' + this.state.strSearch);\r\n      let elmForm = null;\r\n      let itemOrigins = (this.state.items !== null) ? [...this.state.items] : [];\r\n      let items = [];\r\n      let { orderBy, orderDir, isShowForm, strSearch, itemSelected } = this.state;\r\n      // console.log(orderBy + \" - \" + orderDir);\r\n      items = filter(itemOrigins, (item) => {\r\n         return includes(item.name.toLowerCase(), strSearch.toLowerCase());\r\n      });\r\n      items = funcOrderBy(items, [orderBy], [orderDir]);\r\n      // var evens = _.remove(array, function(n) {\r\n      //    return n % 2 == 0;\r\n      //  });\r\n      // items = remove(items, (item) =>\r\n      //    item.id == this.state.idItemDelete\r\n      // )\r\n      if (isShowForm) {\r\n         elmForm = <Form\r\n            itemSelected={itemSelected}\r\n            onClickCancel={this.closeForm}\r\n            onClickAdd={(item) => this.handleAdd(item)}\r\n         />\r\n      }\r\n\r\n\r\n\r\n      return (\r\n         <div>\r\n            <Title />\r\n            <Control\r\n               orderBy={orderBy}\r\n               orderDir={orderDir}\r\n               onClickSort={this.handleSort}\r\n               onClickSearchGo={this.handleSearch}\r\n               onClickAdd={this.handleToggle}\r\n               isShowForm={isShowForm} />\r\n            {elmForm}\r\n            <List items={items} onClickDelete={(id) => this.handleDelete(id)} onClickEdit={(item) => this.handleEdit(item)} />\r\n         </div>\r\n      );\r\n   };\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('main-contain'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}